@page "/login"
@using Microsoft.AspNetCore.Identity
@using System.ComponentModel.DataAnnotations
@using newIdManager.Components.Account

@inject ApplicationUserService applicationUserService
@inject NavigationManager nav
@inject AuthenticationStateProvider auth


<h3>Login</h3>
<hr />
<EditForm Model="@dto" OnValidSubmit="@LoginUser" FormName="LoginUserForm">
	<DataAnnotationsValidator />
	<ValidationSummary />
	<div class="form-floating mb-3">
		<InputText @bind-Value="dto.UserName" class="form-control" autocomplete="username" aria-required="true" placeholder="아이디" />
		<label for="아이디" class="form-label">아이디</label>
	</div>


	<div class="form-floating mb-3">
		<InputText type="password" @bind-Value="dto.Password" class="form-control" autocomplete="current-password" aria-required="true" placeholder="password" />
		<label for="비밀번호" class="form-label">비밀번호</label>
	</div>

	<div class="checkbox mb-3">
		<label class="form-label">
			<InputCheckbox @bind-Value="dto.RememberMe" class="darker-border-checkbox form-check-input" />
			Remember me
		</label>
	</div>

	<div>
		<button type="submit" class="w-100 btn btn-lg btn-primary">로그인</button>
	</div>

</EditForm>
@if (!string.IsNullOrEmpty(loginErrorMessage))
{
	<div style="color:red">@loginErrorMessage</div>
}
<hr />
<p>ID : admin /// PW : admin</p>
<p>ID : user /// PW : user</p>

@code {
	[Parameter]
	public string ReturnUrl { get; set; } = string.Empty;



	[SupplyParameterFromForm]
	private ApplicationLoginDto dto { get; set; } = new();

	private string? loginErrorMessage;

	protected override async Task OnInitializedAsync()
	{

		var authState = await auth.GetAuthenticationStateAsync();
		var user = authState.User;
		if (applicationUserService.IsUserLogin(user))
		{
			nav.NavigateTo(nav.BaseUri);
		}

	}



	private async Task LoginUser()
	{
		var result = await applicationUserService.ApplicationUserSignIn(dto);

		if (result.Succeeded)
		{
			nav.NavigateTo(nav.BaseUri, forceLoad: true);
			return;
		}
		else
		{
			loginErrorMessage = "아이디 또는 비밀번호가 올바르지 않습니다.";
			return;
		}

	}
}
